---
- name: Distribute hosts file to all nodes
  hosts: all
  become: yes
  tasks:
    - name: Copy hosts file
      copy:
        src: hosts
        dest: /etc/hosts
        owner: root
        group: root
        mode: '0644'

    # - name: Add hostname to /etc/hostname
    #   lineinfile:
    #     path: /etc/hostname
    #     line: "{{ inventory_hostname }}"

    # - name: Set hostname
    #   command: hostnamectl set-hostname "{{ inventory_hostname }}"
    #   when: ansible_hostname != inventory_hostname

- name: Install Docker on all nodes
  hosts: all
  become: yes
  tasks:
    - name: Install Docker using get.docker.com script
      shell: curl -fsSL https://get.docker.com | sh

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: yes

- name: Deploy Prometheus and Grafana on master node
  hosts: master
  become: yes
  vars_files:
    - vault.yml
  tasks:
    - name: Create Prometheus configuration directory
      file:
        path: /etc/prometheus
        state: directory

    - name: Copy Prometheus configuration file
      copy:
        src: ./prometheus/prometheus.yml
        dest: /etc/prometheus/prometheus.yml

    - name: Run Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus
        restart_policy: always
        ports:
          - "[::]:9090:9090"
        volumes:
          - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      tags: run_prometheus

    - name: Run Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana
        restart_policy: always
        ports:
          - "[::]:3000:3000"
        env:
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_pass }}"  # Change this password
        volumes:
          - grafana-data:/var/lib/grafana
      tags: run_grafana

- name: Deploy Node Exporter on all nodes
  hosts: all
  become: yes
  tasks:
    - name: Run Node Exporter container
      docker_container:
        name: node_exporter
        image: quay.io/prometheus/node-exporter:latest
        command:
          - '--path.rootfs=/host'
        restart_policy: always
        ports:
          - "9100:9100"
        volumes:
          - '/:/host:ro,rslave'

- name: Deploy custom energy exporter on all nodes
  hosts: all
  become: yes
  tasks:
    - name: Determine architecture
      ansible.builtin.setup:
        filter: ansible_architecture

    - name: Copy dataset
      copy:
        src: "./dataset/vm_data.csv"
        dest: /usr/share/vm_data.csv
        mode: '0644'

    - name: Copy Rust binary
      copy:
        src: "{{ item }}"
        dest: /usr/local/bin/energy-exporter
        mode: '0755'
      with_items:
        - "{{ '../../rs-exporter/target/x86_64-unknown-linux-gnu/release/rs-exporter' if ansible_architecture == 'x86_64' else '.../../rs-exporter/target/aarch64-unknown-linux-gnu/release/rs-exporter' }}"

    - name: Create systemd service file for Rust tool
      copy:
        dest: /etc/systemd/system/energy-exporter.service
        content: |
          [Unit]
          Description=Energy exporter
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/energy-exporter -c /usr/share/vm_data.csv
          Restart=yes
          User=root

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd to recognize new service
      command: systemctl daemon-reload

    - name: Enable and start Rust tool service
      systemd:
        name: energy-exporter
        enabled: yes
        state: started